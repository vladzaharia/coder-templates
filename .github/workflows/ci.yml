name: Deploy templates (CI)

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      message:
        description: "Message to use for the template push, defaults to the commit message"
        required: false
        type: string

run-name: ${{ inputs.message || '' }}

jobs:
  get_params:
    name: Get deployment parameters
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
      pr_title: ${{ steps.message.outputs.pr_title }}
      changed_files: ${{ steps.changed-files.outputs.changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Get short commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Get latest commit title
        id: message
        run: echo "pr_title=$(git log --format=%s -n 1 ${{ github.sha }})" >> $GITHUB_OUTPUT
      - name: Get changed files (on push)
        id: changed-files-push
        uses: tj-actions/changed-files@v39
        if: github.event_name == 'push'
        with:
          dir_names: true
          dir_names_max_depth: 1
          json: true
          files_ignore: |
            _deprecated/**
            **/*.md
            LICENSE
      - name: Get changed files (manual)
        id: changed-files-manual
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "folders=$(tree -J -d -L 1 | jq -c '.[0].contents | map(.name) | map(select(startswith("_") | not))' | sed 's/"/\\"/g')" >> $GITHUB_OUTPUT
      - name: Get changed files
        id: changed-files
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" || "${{ steps.changed-files-pr.outputs.all_changed_files }}" =~ "\.github|\.|_modules" ]]; then
            echo $(tree -J -d -L 1 | jq -c '.[0].contents | map(.name) | map(select(startswith("_") | not))' | sed 's/"/\\"/g') >> $GITHUB_OUTPUT
            echo "any_changed=true" >> $GITHUB_OUTPUT
          else if [[ "${{github.event_name}}" == "push" ]]; then
            echo "changed_files=${{ steps.changed-files-push.outputs.all_changed_files }}" >> $GITHUB_OUTPUT
            echo "any_changed=${{ steps.changed-files-push.outputs.any_changed }}" >> $GITHUB_OUTPUT
          fi

  deploy_all_templates:
    needs: get_params
    name: Deploy all templates
    runs-on: ubuntu-latest
    if: ${{ contains(needs.get_params.outputs.changed_files, '_modules') || contains(needs.get_params.outputs.changed_files, '.github') || contains(needs.get_params.outputs.changed_files, '.') }}
    permissions:
      id-token: write
    steps:
      - name: Checkout files
        uses: actions/checkout@v3
      # - name: Pull Vault secrets from Vault
      #   uses: hashicorp/vault-action@v2
      #   with:
      #     url: https://vault.polaris.rest
      #     role: coder-templates
      #     path: github
      #     method: jwt
      #     # jwtGithubAudience: sigstore
      #     secrets: |
      #       /ci-cd/coder-templates/ci VAULT_ROLE_ID ;
      #       /ci-cd/coder-templates/ci VAULT_SECRET_ID ;
      #       /ci-cd/coder-templates/ci CODER_SESSION_TOKEN
      - name: Use Just
        uses: extractions/setup-just@v2
      - name: Use Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Setup Coder
        uses: coder/setup-action@v1
        with:
          access_url: "https://code.polaris.rest"
          # coder_session_token: ${{ env.CODER_SESSION_TOKEN }}
          coder_session_token: ${{ secrets.CODER_SESSION_TOKEN }}
      - name: Push templates
        run: just deploy
        env:
          CODER_URL: https://code.polaris.rest
          CODER_TEMPLATE_VERSION: ${{ needs.get_params.outputs.sha_short }}
          CODER_TEMPLATE_MESSAGE: ${{ inputs.message || needs.get_params.outputs.pr_title }}
          # VAULT_ROLE_ID: ${{ env.VAULT_ROLE_ID }}
          VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
          TF_VAR_vault_role_id: ${{ secrets.VAULT_ROLE_ID }}
          # VAULT_SECRET_ID: ${{ env.VAULT_SECRET_ID }}
          VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
          TF_VAR_vault_secret_id: ${{ secrets.VAULT_SECRET_ID }}

  deploy_template:
    needs: get_params
    name: Deploy template
    runs-on: ubuntu-latest
    if: ${{ needs.get_params.outputs.any_changed != 'false' && !(contains(needs.get_params.outputs.changed_files, '_modules') || contains(needs.get_params.outputs.changed_files, '.github') || contains(needs.get_params.outputs.changed_files, '.')) }}
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        template: ${{ fromJson(needs.get_params.outputs.changed_files) }}
    steps:
      - name: Checkout files
        uses: actions/checkout@v3
      # - name: Pull Vault secrets from Vault
      #   uses: hashicorp/vault-action@v2
      #   with:
      #     url: https://vault.polaris.rest
      #     role: coder-templates
      #     path: github
      #     method: jwt
      #     # jwtGithubAudience: sigstore
      #     secrets: |
      #       /ci-cd/coder-templates/ci VAULT_ROLE_ID ;
      #       /ci-cd/coder-templates/ci VAULT_SECRET_ID ;
      #       /ci-cd/coder-templates/ci CODER_SESSION_TOKEN
      - name: Use Just
        uses: extractions/setup-just@v2
      - name: Use Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Setup Coder
        uses: coder/setup-action@v1
        with:
          access_url: "https://code.polaris.rest"
          # coder_session_token: ${{ env.CODER_SESSION_TOKEN }}
          coder_session_token: ${{ secrets.CODER_SESSION_TOKEN }}
      - name: Push template
        run: just deploy ${{ matrix.template }}
        if: ${{ !startsWith(matrix.template, '.') }}
        env:
          CODER_URL: https://code.polaris.rest
          CODER_TEMPLATE_NAME: ${{ matrix.template }}
          CODER_TEMPLATE_VERSION: ${{ needs.get_params.outputs.sha_short }}
          CODER_TEMPLATE_DIR: ./${{ matrix.template }}
          CODER_TEMPLATE_MESSAGE: ${{ inputs.message || needs.get_params.outputs.pr_title }}
          # VAULT_ROLE_ID: ${{ env.VAULT_ROLE_ID }}
          VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
          TF_VAR_vault_role_id: ${{ secrets.VAULT_ROLE_ID }}
          # VAULT_SECRET_ID: ${{ env.VAULT_SECRET_ID }}
          VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
          TF_VAR_vault_secret_id: ${{ secrets.VAULT_SECRET_ID }}
