name: Validate templates (PR)

on:
  pull_request:
    branches:
      - main

jobs:
  get_params:
    name: Get validation parameters
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      changed_files: ${{ steps.changed-files.outputs.changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Get changed files (for PR)
        id: changed-files-pr
        uses: tj-actions/changed-files@v39
        with:
          dir_names: true
          dir_names_max_depth: 1
          json: true
          files_yaml: |
            common:
              - _modules/**
              - .github/**
              - justfile
            templates:
              - '!_modules/**'
              - '!github/**'
              - '!justfile'

          files_ignore: |
            _deprecated/**
            **/*.md
            LICENSE
      - name: Get all templates
        id: get-templates
        if: steps.changed-files-pr.outputs.common_any_changed == 'true'
        run: |
          echo "folders=$(tree -J -d -L 1 | jq -c '.[0].contents | map(.name) | map(select(startswith("_") | not))' | sed 's/"/\\"/g')" >> $GITHUB_OUTPUT

      - name: Get changed files
        id: changed-files
        run: |
          if [[ "${{github.event_name}}" == "pull_request" ]]; then
            if [[ "${{ steps.changed-files-pr.outputs.common_any_changed }}" == "true" ]]; then
              echo "changed_files=${{ steps.get-templates.outputs.folders }}" >> $GITHUB_OUTPUT
              echo "any_changed=true" >> $GITHUB_OUTPUT
            else
              echo "changed_files=${{ steps.changed-files-pr.outputs.templates_all_changed_files }}" >> $GITHUB_OUTPUT
              echo "any_changed=${{ steps.changed-files-pr.outputs.templates_any_changed }}" >> $GITHUB_OUTPUT
            fi
          fi

  validate_template:
    needs: get_params
    name: Validate template
    runs-on: ubuntu-latest
    if: ${{ needs.get_params.outputs.any_changed != 'false' }}
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        template: ${{ fromJson(needs.get_params.outputs.all_changed_files) }}
    steps:
      - name: Checkout files
        uses: actions/checkout@v3
      - name: Use Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Use Just
        uses: extractions/setup-just@v2
      - name: Cache Terraform packages
        uses: actions/cache@v3
        with:
          path: ./${{ matrix.template }}/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles(format('./{0}/.terraform.lock.hcl', matrix.template)) }}
          restore-keys: |
            ${{ runner.os }}-terraform-
      # - name: Pull Vault secrets from Vault
      #   uses: hashicorp/vault-action@v2
      #   with:
      #     url: https://vault.polaris.rest
      #     role: coder-templates
      #     path: github
      #     method: jwt
      #     # jwtGithubAudience: sigstore
      #     secrets: |
      #       /ci-cd/coder-templates/pr VAULT_ROLE_ID ;
      #       /ci-cd/coder-templates/pr VAULT_SECRET_ID
      - name: Download Terraform packages
        run: just init ${{ matrix.template }}
        if: ${{ !startsWith(matrix.template, '.') }}
      - name: Validate template
        run: just validate ${{ matrix.template }}
        if: ${{ !startsWith(matrix.template, '.') }}
      - name: Plan template
        run: just plan ${{ matrix.template }}
        if: ${{ !startsWith(matrix.template, '.') }}
        env:
          # TF_VAR_vault_role_id: ${{ env.VAULT_ROLE_ID }}
          TF_VAR_vault_role_id: ${{ secrets.VAULT_ROLE_ID }}
          # TF_VAR_vault_secret_id: ${{ env.VAULT_SECRET_ID }}
          TF_VAR_vault_secret_id: ${{ secrets.VAULT_SECRET_ID }}
